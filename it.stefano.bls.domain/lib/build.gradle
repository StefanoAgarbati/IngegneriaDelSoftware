/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    
    flatDir { dirs '../../libs'}
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    // https://mvnrepository.com/artifact/com.pi4j/pi4j-core
	implementation 'com.pi4j:pi4j-core:1.4'
	
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	implementation 'com.google.code.gson:gson:2.10.1'
	
	//communication support lib
    // implementation files('../../libs/commSupport-1.0.jar')
    //implementation name: 'commSupport-1.0'
    implementation('it.stefano.commSupport:lib')
    
    implementation('it.stefano.mactor:lib')
    //mactor lib
    //implementation name: 'mactor-1.0'
    
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': rootProject.name)
    }
    archivesBaseName = 'it.stefano.bls.domain'
}


