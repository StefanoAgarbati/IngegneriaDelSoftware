/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    
  	//flatDir {dirs '../../libs'}
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    
    //communication support lib
    //implementation files('../../libs/commSupport-1.0.jar')
    implementation('it.stefano.commSupport:lib')
    
    //domain 
    //implementation name: 'it.stefano.bls.domain-1.0'
    implementation('it.stefano.bls.domain:lib')
    
    //mactor
    //implementation name: 'mactor-1.0'
    implementation('it.stefano.mactor:lib')
    
    //bls base
    implementation('it.stefano.bls.base:lib')
    
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

def mainClassName = 'blSystemLocal.MainButtonLedLocalActorSystem'
def basename = 'buttonLedLocalActor'

tasks.named('jar') {
	manifest {
		attributes 'Main-Class': mainClassName
	}
	archivesBaseName = basename
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from {configurations.runtimeClasspath.collect {it.isDirectory() ? it : zipTree(it)}}
}


